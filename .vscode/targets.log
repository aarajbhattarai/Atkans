make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0

# Make data base, printed on Thu Jan  6 08:19:05 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/aarajbhattarai/atkans-site-factory
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# makefile (from `Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# makefile (from `Makefile', line 21)
COMPOSE_EXEC_APP = $(COMPOSE_EXEC) app-dev
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/mb/m93lgsm57r70jcvr98vj8p1w0000gn/T/vscode-ipc-eba93c5c-2165-4757-8ab1-a890601fe5de.sock
# environment
VSCODE_CWD = /Users/aarajbhattarai
# makefile (from `Makefile', line 22)
COMPOSE_TEST_RUN = $(COMPOSE) run --rm -e DJANGO_CONFIGURATION=Test
# environment
PATH = /usr/local/opt/openjdk/bin:/usr/local/bin/code:/usr/local/opt/util-linux/sbin:/usr/local/opt/util-linux/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/MacGPG2/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Apple/usr/bin:/Applications/Visual Studio Code.app/Contents/Resources/app/bin:/Applications/Visual Studio Code.app/Contents/Resources/app/bin:/Applications/Visual Studio Code.app/Contents/Resources/app/bin:/Users/aarajbhattarai/Developer/flutter/bin
# makefile (from `Makefile', line 18)
COMPOSE_RUN = $(COMPOSE) run --rm
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# makefile (from `Makefile', line 13)
COMPOSE = NGINX_IMAGE_NAME="$(NGINX_IMAGE_NAME)" NGINX_IMAGE_TAG="$(NGINX_IMAGE_TAG)" DOCKER_USER="$(DOCKER_UID):$(DOCKER_GID)" docker-compose
# makefile (from `Makefile', line 10)
NGINX_IMAGE_NAME = nginx
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.2MEDfP6THO/Listeners
# makefile (from `Makefile', line 24)
WAIT_DB = $(COMPOSE_RUN) dockerize -wait tcp://db:3306 -timeout 60s
# automatic
%F = $(notdir $%)
# makefile (from `Makefile', line 25)
WAIT_ES = $(COMPOSE_RUN) dockerize -wait tcp://elasticsearch:9200 -timeout 60s
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /Users/aarajbhattarai/atkans-site-factory
# makefile (from `Makefile', line 5)
COLOR_RESET = \033[0m
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/services/extensions/node/extensionHostProcess
# environment
HOME = /Users/aarajbhattarai
# default
MAKEFILEPATH := /Applications/Xcode.app/Contents/Developer/Makefiles
# environment
VSCODE_CLI = 1
# environment
VSCODE_CODE_CACHE_PATH = /Users/aarajbhattarai/Library/Application Support/Code/CachedData/899d46d82c4c95423fb7e10e68eba52050e30ba3
# environment
LOGNAME = aarajbhattarai
# makefile (from `Makefile', line 36)
YARN = $(COMPOSE_RUN_NODE) yarn
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# makefile (from `Makefile', line 23)
COMPOSE_TEST_RUN_APP = $(COMPOSE_TEST_RUN) app-dev
# environment
SHLVL = 3
# makefile (from `Makefile', line 11)
NGINX_IMAGE_TAG = 1.20.1
# default
MAKE_VERSION := 3.81
# environment
USER = aarajbhattarai
# makefile
.DEFAULT_GOAL := default
# environment
TERM_SESSION_ID = 74B1F0BC-655A-4246-A9C2-36CA77FB6886
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from `Makefile', line 35)
COMPOSE_RUN_NODE = $(COMPOSE_RUN) -e HOME="/tmp" node
# default
MAKE_COMMAND := /Applications/Xcode.app/Contents/Developer/usr/bin/make
# makefile (from `Makefile', line 1)
RICHIE_SITE = atkans
# environment
TERM_PROGRAM = Apple_Terminal
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/mb/m93lgsm57r70jcvr98vj8p1w0000gn/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/aarajbhattarai/Library/Application Support/Code/1.63.2-main.sock
# makefile (from `Makefile', line 39)
MANAGE = $(COMPOSE_RUN_APP) python manage.py
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
TERM_PROGRAM_VERSION = 443
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.22090242.22090248.ED954C9C-5706-4AD7-A7D4-975DA3E5CE49
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# makefile (from `Makefile', line 4)
COLOR_INFO = \033[0;36m
# makefile (from `Makefile', line 19)
COMPOSE_RUN_APP = $(COMPOSE_RUN) app-dev
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# makefile (from `Makefile', line 9)
DOCKER_GID = $(shell id -g)
# automatic
<F = $(notdir $<)
# environment
LC_ALL = C
# makefile (from `Makefile', line 20)
COMPOSE_EXEC = $(COMPOSE) exec
# makefile (from `Makefile', line 26)
WAIT_SENTINEL = $(COMPOSE_RUN) dockerize -wait tcp://redis-sentinel:26379 -wait tcp://redis-primary:6379 -timeout 20s
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from `Makefile', line 8)
DOCKER_UID = $(shell id -u)
# default
.INCLUDE_DIRS = /usr/local/include
# environment
MAKELEVEL := 0
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
VSCODE_PID = 50767
# variable set hash-table stats:
# Load=88/1024=9%, Rehash=0, Collisions=4/117=3%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777232, inode 22708961): 21 files, no impossibilities.

# 21 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

stop:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 86):
	@$(COMPOSE) stop
	

lint-back-black:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 183):
	@echo 'lint:black startedâ€¦'
	@$(COMPOSE_TEST_RUN_APP) black .
	

# Not a target:
all:
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

watch-ts:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 148):
	@$(YARN) watch-ts
	

.PHONY: bootstrap build reset down logs run stop info build-front build-sass build-sass-production build-ts build-ts-production install-front install-front-production lint-front-prettier lint-front-prettier-write lint-front-eslint lint-front test-back watch-sass watch-ts check demo-site init lint-back lint-back-black lint-back-flake8 lint-back-isort lint-back-pylint lint-back-raincoat lint-back-bandit import-fixtures i18n i18n-back i18n-front migrate search-index superuser ci-check ci-migrate ci-run ci-version clean help
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

superuser:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 247):
	@$(COMPOSE) up -d db
	@$(WAIT_DB)
	@$(MANAGE) createsuperuser
	

lint-front-prettier-write:
#  Phony target (prerequisite of .PHONY).
 
make: *** No rule to make target `all'.  Stop.
 
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 126):
	@$(YARN) prettier-write
	

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-01-05 17:56:13
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

build-front: install-front build-ts build-sass
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

bootstrap: env.d/aws data/media/atkans/.keep data/db/atkans stop build-front build i18n run migrate init
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

demo-site:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 161):
	@$(COMPOSE) up -d db
	@$(WAIT_DB)
	@$(MANAGE) flush
	@$(MANAGE) create_demo_site
	

ci-run:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 264):
	@$(COMPOSE) up -d app
	# As we use a remote docker environment, we should explicitly use the same
	# network to check containers status
	@echo "Wait for services to be up..."
	docker run --network container:fun_db_1 --rm jwilder/dockerize -wait tcp://localhost:3306 -timeout 60s
	docker run --network container:fun_elasticsearch_1 --rm jwilder/dockerize -wait tcp://localhost:9200 -timeout 60s
	

build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 60):
	$(COMPOSE) build app
	$(COMPOSE) build nginx
	$(COMPOSE) build app-dev
	

build-sass-production:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 102):
	@$(YARN) build-sass-production
	

test-back:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 140):
	bin/pytest
	

lint-back-raincoat:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 203):
	@echo 'lint:raincoat startedâ€¦'
	@$(COMPOSE_TEST_RUN_APP) raincoat
	

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 291):
	@grep -E '^[a-zA-Z0-9_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'
	

default: help
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

migrate:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 235):
	@$(COMPOSE) up -d db
	@$(WAIT_DB)
	@$(MANAGE) migrate
	

lint-back-isort:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 193):
	@echo 'lint:isort startedâ€¦'
	@$(COMPOSE_TEST_RUN_APP) isort --atomic .
	

i18n-front:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 230):
	@$(YARN) extract-translations
	@$(YARN) compile-translations
	

data/media/atkans/.keep:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 282):
	@echo 'Preparing media volume...'
	@mkdir -p data/media/$(RICHIE_SITE)
	@touch data/media/$(RICHIE_SITE)/.keep
	

lint-back-flake8:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 188):
	@echo 'lint:flake8 startedâ€¦'
	@$(COMPOSE_TEST_RUN_APP) flake8
	

search-index:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 241):
	@$(COMPOSE) up -d elasticsearch
	@$(WAIT_ES)
	@$(MANAGE) bootstrap_elasticsearch
	

i18n: i18n-back i18n-front
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build-sass:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 98):
	@$(YARN) build-sass
	

reset:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 66):
	$(COMPOSE) stop
	rm -Ir data/* || exit 0
	$(COMPOSE) rm db
	

run:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 80):
	@$(COMPOSE) up -d nginx
	@$(COMPOSE) up -d app-dev
	@$(WAIT_DB)
	

lint-front-eslint:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 130):
	@$(YARN) lint
	

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 278):
	git clean -idx
	

lint-back-bandit:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 208):
	@echo 'lint:bandit startedâ€¦'
	@$(COMPOSE_TEST_RUN_APP) bandit -qr .
	

i18n-back:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 223):
	@$(MANAGE) makemessages --keep-pot --all
	@echo 'Reactivating obsolete strings (allow overriding strings defined in dependencies)'
	@$(COMPOSE_RUN_APP) find ./ -type f -name django.po -exec sed -i 's/#~ //g' {} \;
	@$(MANAGE) compilemessages
	

lint-back-pylint:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 198):
	@echo 'lint:pylint startedâ€¦'
	@$(COMPOSE_TEST_RUN_APP) pylint .
	

install-front-production:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 118):
	@$(YARN) install --frozen-lockfile
	

ci-check:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 254):
	$(COMPOSE_RUN) app python manage.py check
	

watch-sass:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
 
#  commands to execute (from `Makefile', line 144):
	@$(YARN) watch-sass
	

init:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 168):
	@$(MANAGE) richie_init
	

lint-front: lint-front-prettier-write lint-front-eslint
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

build-ts-production:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 110):
	@$(YARN) build-ts-production
	

logs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 76):
	@$(COMPOSE) logs -f app-dev
	

import-fixtures:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 213):
	@$(MANAGE) import_fixtures -v3
	

data/db/atkans:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 287):
	@echo 'Preparing db volume...'
	@mkdir -p data/db/$(RICHIE_SITE)
	

env.d/aws:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 153):
	cp env.d/aws.dist env.d/aws
	

lint-front-prettier:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 122):
	@$(YARN) prettier
	

ci-version:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 273):
	$(COMPOSE_RUN) --no-deps app cat version.json
	

check:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 157):
	@$(MANAGE) check
	

install-front:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 114):
	@$(YARN) install
	

lint-back: lint-back-isort lint-back-black lint-back-flake8 lint-back-pylint lint-back-bandit lint-back-raincoat
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

build-ts:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 106):
	@$(YARN) build-ts
	

down:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 72):
	@$(COMPOSE) down
	

info:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 90):
	@echo "RICHIE_SITE: $(COLOR_INFO)$(RICHIE_SITE)$(COLOR_RESET)"
	

ci-migrate:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 258):
	@$(COMPOSE) up -d db
	@$(WAIT_DB)
	$(COMPOSE_RUN) app python manage.py migrate
	

# files hash-table stats:
# Load=54/1024=5%, Rehash=0, Collisions=1/183=1%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 1
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4087 / max = 4087 / min = 4087 / avg = 4087

# Finished Make data base on Thu Jan  6 08:19:05 2022

 
